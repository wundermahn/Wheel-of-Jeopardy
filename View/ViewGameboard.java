/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.awt.image.ImageObserver;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Controller.*;
import java.awt.Color;
/**
 *
 * @author knowlzee
 */
public class ViewGameboard extends javax.swing.JFrame {

    Model model;
    public VIEW_ENUM view_flag;
    public Color colorJeopardyBlue = new Color(51,153,255);

    /**
     * Creates new form ViewGameboard
     */
    public ViewGameboard(Model model) {
        this.model = model;
        this.view_flag = VIEW_ENUM.NONE;
        initComponents();
        
        //INITIALIZE CATEGORIES TO BE OPAQUE SO COLOR CAN BE APPLIED
        this.jLabelCAT1.setOpaque(true);
        this.jLabelCAT2.setOpaque(true);
        this.jLabelCAT3.setOpaque(true);
        this.jLabelCAT4.setOpaque(true);
        this.jLabelCAT5.setOpaque(true);
        this.jLabelCAT6.setOpaque(true);
        
        //INTIALIZE COLOR OF CATEGORIES
        this.jLabelCAT1.setBackground(colorJeopardyBlue);
        this.jLabelCAT2.setBackground(colorJeopardyBlue);
        this.jLabelCAT3.setBackground(colorJeopardyBlue);
        this.jLabelCAT4.setBackground(colorJeopardyBlue);
        this.jLabelCAT5.setBackground(colorJeopardyBlue);
        this.jLabelCAT6.setBackground(colorJeopardyBlue);
        
        //TEMP LABEL SHOWING WHEEL POSITION
        this.jLabelWheelPosition.setOpaque(true);
        this.jLabelWheelPosition.setBackground(Color.MAGENTA);
    }
    
    /**
     * Creates new form ViewGameboard
     */
    public void setRoundData(int currentRound, String currentPlayer, int remainingSpins){
        this.jLabelCurrentRoundNumber.setText(Integer.toString(currentRound));
        this.jLabelCurrentPlayerName.setText(currentPlayer);
        this.jLabelRemaingSpinsNumber.setText(Integer.toString(remainingSpins));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelGameboard = new javax.swing.JPanel();
        jPanelScoreBoard = new javax.swing.JPanel();
        jLabelTokensTitle = new javax.swing.JLabel();
        jLabelRoundScoreTitle = new javax.swing.JLabel();
        jLabelTotalScoreTitle = new javax.swing.JLabel();
        jLabelTeam1Name = new javax.swing.JLabel();
        jLabelTeam1Tokens = new javax.swing.JLabel();
        jLabelTeam1RoundScore = new javax.swing.JLabel();
        jLabelTeam1TotalScore = new javax.swing.JLabel();
        jLabelTeam2Name = new javax.swing.JLabel();
        jLabelTeam2Tokens = new javax.swing.JLabel();
        jLabelTeam2RoundScore = new javax.swing.JLabel();
        jLabelTeam2TotalScore = new javax.swing.JLabel();
        jLabelTeam3Name = new javax.swing.JLabel();
        jLabelTeam3Tokens = new javax.swing.JLabel();
        jLabelTeam3RoundScore = new javax.swing.JLabel();
        jLabelTeam3TotalScore = new javax.swing.JLabel();
        jPanelWheel = new javax.swing.JPanel();
        jButtonSpinWheel = new javax.swing.JButton();
        spinner1 = new Resources.Spinner();
        jLabelWheel = new javax.swing.JLabel();
        jLabelSpinner = new javax.swing.JLabel();
        jLabelWheelPosition = new javax.swing.JLabel();
        jPanelQuestionTable = new javax.swing.JPanel();
        jLabelCAT1 = new javax.swing.JLabel();
        jScrollPaneCAT1Title = new javax.swing.JScrollPane();
        jTextAreaCAT1Title = new javax.swing.JTextArea();
        jLabelCAT1Q1 = new javax.swing.JLabel();
        jLabelCAT1Q2 = new javax.swing.JLabel();
        jLabelCAT1Q3 = new javax.swing.JLabel();
        jLabelCAT1Q4 = new javax.swing.JLabel();
        jLabelCAT1Q5 = new javax.swing.JLabel();
        jLabelCAT2 = new javax.swing.JLabel();
        jScrollPaneCAT2Title = new javax.swing.JScrollPane();
        jTextAreaCAT2Title = new javax.swing.JTextArea();
        jLabelCAT2Q1 = new javax.swing.JLabel();
        jLabelCAT2Q2 = new javax.swing.JLabel();
        jLabelCAT2Q3 = new javax.swing.JLabel();
        jLabelCAT2Q4 = new javax.swing.JLabel();
        jLabelCAT2Q5 = new javax.swing.JLabel();
        jLabelCAT3 = new javax.swing.JLabel();
        jScrollPaneCAT3Title = new javax.swing.JScrollPane();
        jTextAreaCAT3Title = new javax.swing.JTextArea();
        jLabelCAT3Q1 = new javax.swing.JLabel();
        jLabelCAT3Q2 = new javax.swing.JLabel();
        jLabelCAT3Q3 = new javax.swing.JLabel();
        jLabelCAT3Q4 = new javax.swing.JLabel();
        jLabelCAT3Q5 = new javax.swing.JLabel();
        jLabelCAT4 = new javax.swing.JLabel();
        jScrollPaneCAT4Title = new javax.swing.JScrollPane();
        jTextAreaCAT4Title = new javax.swing.JTextArea();
        jLabelCAT4Q1 = new javax.swing.JLabel();
        jLabelCAT4Q2 = new javax.swing.JLabel();
        jLabelCAT4Q3 = new javax.swing.JLabel();
        jLabelCAT4Q4 = new javax.swing.JLabel();
        jLabelCAT4Q5 = new javax.swing.JLabel();
        jLabelCAT5 = new javax.swing.JLabel();
        jScrollPaneCAT5Title = new javax.swing.JScrollPane();
        jTextAreaCAT5Title = new javax.swing.JTextArea();
        jLabelCAT5Q1 = new javax.swing.JLabel();
        jLabelCAT5Q2 = new javax.swing.JLabel();
        jLabelCAT5Q3 = new javax.swing.JLabel();
        jLabelCAT5Q4 = new javax.swing.JLabel();
        jLabelCAT5Q5 = new javax.swing.JLabel();
        jLabelCAT6 = new javax.swing.JLabel();
        jScrollPaneCAT6Title = new javax.swing.JScrollPane();
        jTextAreaCAT6Title = new javax.swing.JTextArea();
        jLabelCAT6Q1 = new javax.swing.JLabel();
        jLabelCAT6Q2 = new javax.swing.JLabel();
        jLabelCAT6Q3 = new javax.swing.JLabel();
        jLabelCAT6Q4 = new javax.swing.JLabel();
        jLabelCAT6Q5 = new javax.swing.JLabel();
        jButtonQuit = new javax.swing.JButton();
        jButtonReturnToMainMenu = new javax.swing.JButton();
        jPanelRoundInfo = new javax.swing.JPanel();
        jLabelCurrentPlayerTitle = new javax.swing.JLabel();
        jLabelCurrentPlayerName = new javax.swing.JLabel();
        jLabelCurrentRoundNumber = new javax.swing.JLabel();
        jLabelCurrentRoundTitle = new javax.swing.JLabel();
        jLabelRemainingSpinsTitle = new javax.swing.JLabel();
        jLabelRemaingSpinsNumber = new javax.swing.JLabel();
        jPanelTurnInfo = new javax.swing.JPanel();
        jButtonShowAnswer = new javax.swing.JButton();
        jLabelCurrentQuestionCategoryTitle = new javax.swing.JLabel();
        jLabelCurrentQuestionValueTitle = new javax.swing.JLabel();
        jLabelCurrentQuestionTitle = new javax.swing.JLabel();
        jLabelQuestionTimerTitle = new javax.swing.JLabel();
        jLabelCurrentQuestionCategory = new javax.swing.JLabel();
        jLabelCurrentQuestionValue = new javax.swing.JLabel();
        jLabelQuestionTimer = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaCurrentQuestion = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelGameboard.setBackground(java.awt.Color.lightGray);
        jPanelGameboard.setLayout(null);

        jPanelScoreBoard.setBorder(javax.swing.BorderFactory.createTitledBorder("Score Board"));

        jLabelTokensTitle.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabelTokensTitle.setText("Tokens");

        jLabelRoundScoreTitle.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabelRoundScoreTitle.setText("Round Score");

        jLabelTotalScoreTitle.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabelTotalScoreTitle.setText("Total Score");

        jLabelTeam1Name.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabelTeam1Name.setText("Team 1:");

        jLabelTeam1Tokens.setText("uninitialized");

        jLabelTeam1RoundScore.setText("uninitialized");

        jLabelTeam1TotalScore.setText("uninitialized");

        jLabelTeam2Name.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabelTeam2Name.setText("Team 2:");

        jLabelTeam2Tokens.setText("uninitialized");

        jLabelTeam2RoundScore.setText("uninitialized");

        jLabelTeam2TotalScore.setText("unitialized");

        jLabelTeam3Name.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabelTeam3Name.setText("Team 3:");

        jLabelTeam3Tokens.setText("uninitialized");

        jLabelTeam3RoundScore.setText("uninitialized");

        jLabelTeam3TotalScore.setText("uninitialized");

        javax.swing.GroupLayout jPanelScoreBoardLayout = new javax.swing.GroupLayout(jPanelScoreBoard);
        jPanelScoreBoard.setLayout(jPanelScoreBoardLayout);
        jPanelScoreBoardLayout.setHorizontalGroup(
            jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelScoreBoardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTeam2Name, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam3Name, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam1Name, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTeam2Tokens, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam3Tokens, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTokensTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam1Tokens, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTeam2RoundScore, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam3RoundScore, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam1RoundScore, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRoundScoreTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabelTotalScoreTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelTeam1TotalScore, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelTeam2TotalScore, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam3TotalScore, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        jPanelScoreBoardLayout.setVerticalGroup(
            jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelScoreBoardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelScoreBoardLayout.createSequentialGroup()
                        .addComponent(jLabelTokensTitle)
                        .addGap(9, 9, 9)
                        .addComponent(jLabelTeam1Tokens)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelTeam2Tokens)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelTeam3Tokens))
                    .addGroup(jPanelScoreBoardLayout.createSequentialGroup()
                        .addGroup(jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelRoundScoreTitle)
                            .addComponent(jLabelTotalScoreTitle))
                        .addGap(9, 9, 9)
                        .addGroup(jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTeam1Name)
                            .addComponent(jLabelTeam1RoundScore)
                            .addComponent(jLabelTeam1TotalScore))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTeam2Name)
                            .addComponent(jLabelTeam2RoundScore)
                            .addComponent(jLabelTeam2TotalScore))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelScoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTeam3Name)
                            .addComponent(jLabelTeam3RoundScore)
                            .addComponent(jLabelTeam3TotalScore))))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanelGameboard.add(jPanelScoreBoard);
        jPanelScoreBoard.setBounds(10, 10, 410, 190);

        jPanelWheel.setBackground(javax.swing.UIManager.getDefaults().getColor("Nb.ScrollPane.Border.color"));
        jPanelWheel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelWheel.setLayout(null);

        jButtonSpinWheel.setText("Spin Wheel");
        jButtonSpinWheel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSpinWheelActionPerformed(evt);
            }
        });
        jPanelWheel.add(jButtonSpinWheel);
        jButtonSpinWheel.setBounds(290, 390, 85, 23);
        jPanelWheel.add(spinner1);
        spinner1.setBounds(0, 0, 410, 430);

        jLabelWheel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Wheel_389by388.png"))); // NOI18N
        jPanelWheel.add(jLabelWheel);
        jLabelWheel.setBounds(10, 10, 389, 400);

        jLabelSpinner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSpinner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Spinner_62by60.png"))); // NOI18N
        jPanelWheel.add(jLabelSpinner);
        jLabelSpinner.setBounds(170, 180, 70, 70);

        jLabelWheelPosition.setText("unitialized");
        jPanelWheel.add(jLabelWheelPosition);
        jLabelWheelPosition.setBounds(10, 400, 120, 14);

        jPanelGameboard.add(jPanelWheel);
        jPanelWheel.setBounds(10, 210, 410, 430);

        jPanelQuestionTable.setBackground(javax.swing.UIManager.getDefaults().getColor("Nb.ScrollPane.Border.color"));
        jPanelQuestionTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT1.setText("uninitialized");
        jLabelCAT1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelCAT1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabelCAT1MouseReleased(evt);
            }
        });

        jTextAreaCAT1Title.setColumns(20);
        jTextAreaCAT1Title.setLineWrap(true);
        jTextAreaCAT1Title.setRows(5);
        jTextAreaCAT1Title.setText("<uninitialized category 1 - title>");
        jTextAreaCAT1Title.setEnabled(false);
        jScrollPaneCAT1Title.setViewportView(jTextAreaCAT1Title);

        jLabelCAT1Q1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT1Q1.setText("uninitialized");
        jLabelCAT1Q1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT1Q2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT1Q2.setText("uninitialized");
        jLabelCAT1Q2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT1Q3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT1Q3.setText("uninitialized");
        jLabelCAT1Q3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT1Q4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT1Q4.setText("uninitialized");
        jLabelCAT1Q4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT1Q5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT1Q5.setText("uninitialized");
        jLabelCAT1Q5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT2.setText("uninitialized");
        jLabelCAT2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelCAT2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabelCAT2MouseReleased(evt);
            }
        });

        jTextAreaCAT2Title.setColumns(20);
        jTextAreaCAT2Title.setLineWrap(true);
        jTextAreaCAT2Title.setRows(5);
        jTextAreaCAT2Title.setText("<uninitialized category 2 - title>");
        jTextAreaCAT2Title.setEnabled(false);
        jScrollPaneCAT2Title.setViewportView(jTextAreaCAT2Title);

        jLabelCAT2Q1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT2Q1.setText("uninitialized");
        jLabelCAT2Q1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT2Q2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT2Q2.setText("uninitialized");
        jLabelCAT2Q2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT2Q3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT2Q3.setText("uninitialized");
        jLabelCAT2Q3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT2Q4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT2Q4.setText("uninitialized");
        jLabelCAT2Q4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT2Q5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT2Q5.setText("uninitialized");
        jLabelCAT2Q5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT3.setText("uninitialized");
        jLabelCAT3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelCAT3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabelCAT3MouseReleased(evt);
            }
        });

        jTextAreaCAT3Title.setColumns(20);
        jTextAreaCAT3Title.setLineWrap(true);
        jTextAreaCAT3Title.setRows(5);
        jTextAreaCAT3Title.setText("<uninitialized category 3 - title>");
        jTextAreaCAT3Title.setEnabled(false);
        jScrollPaneCAT3Title.setViewportView(jTextAreaCAT3Title);

        jLabelCAT3Q1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT3Q1.setText("uninitialized");
        jLabelCAT3Q1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT3Q2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT3Q2.setText("uninitialized");
        jLabelCAT3Q2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT3Q3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT3Q3.setText("uninitialized");
        jLabelCAT3Q3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT3Q4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT3Q4.setText("uninitialized");
        jLabelCAT3Q4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT3Q5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT3Q5.setText("uninitialized");
        jLabelCAT3Q5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT4.setText("uninitialized");
        jLabelCAT4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelCAT4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabelCAT4MouseReleased(evt);
            }
        });

        jTextAreaCAT4Title.setColumns(20);
        jTextAreaCAT4Title.setLineWrap(true);
        jTextAreaCAT4Title.setRows(5);
        jTextAreaCAT4Title.setText("<uninitialized category 4 - title>");
        jTextAreaCAT4Title.setEnabled(false);
        jScrollPaneCAT4Title.setViewportView(jTextAreaCAT4Title);

        jLabelCAT4Q1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT4Q1.setText("uninitialized");
        jLabelCAT4Q1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT4Q2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT4Q2.setText("uninitialized");
        jLabelCAT4Q2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT4Q3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT4Q3.setText("uninitialized");
        jLabelCAT4Q3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT4Q4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT4Q4.setText("uninitialized");
        jLabelCAT4Q4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT4Q5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT4Q5.setText("uninitialized");
        jLabelCAT4Q5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT5.setText("uninitialized");
        jLabelCAT5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelCAT5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabelCAT5MouseReleased(evt);
            }
        });

        jTextAreaCAT5Title.setColumns(20);
        jTextAreaCAT5Title.setLineWrap(true);
        jTextAreaCAT5Title.setRows(5);
        jTextAreaCAT5Title.setText("<uninitialized category 5 - title>");
        jTextAreaCAT5Title.setEnabled(false);
        jScrollPaneCAT5Title.setViewportView(jTextAreaCAT5Title);

        jLabelCAT5Q1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT5Q1.setText("uninitialized");
        jLabelCAT5Q1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT5Q2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT5Q2.setText("uninitialized");
        jLabelCAT5Q2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT5Q3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT5Q3.setText("uninitialized");
        jLabelCAT5Q3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT5Q4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT5Q4.setText("uninitialized");
        jLabelCAT5Q4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT5Q5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT5Q5.setText("uninitialized");
        jLabelCAT5Q5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT6.setText("uninitialized");
        jLabelCAT6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelCAT6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabelCAT6MouseReleased(evt);
            }
        });

        jTextAreaCAT6Title.setColumns(20);
        jTextAreaCAT6Title.setLineWrap(true);
        jTextAreaCAT6Title.setRows(5);
        jTextAreaCAT6Title.setText("<uninitialized category 6 - title>");
        jTextAreaCAT6Title.setEnabled(false);
        jScrollPaneCAT6Title.setViewportView(jTextAreaCAT6Title);

        jLabelCAT6Q1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT6Q1.setText("uninitialized");
        jLabelCAT6Q1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT6Q2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT6Q2.setText("uninitialized");
        jLabelCAT6Q2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT6Q3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT6Q3.setText("uninitialized");
        jLabelCAT6Q3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT6Q4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT6Q4.setText("uninitialized");
        jLabelCAT6Q4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCAT6Q5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCAT6Q5.setText("uninitialized");
        jLabelCAT6Q5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanelQuestionTableLayout = new javax.swing.GroupLayout(jPanelQuestionTable);
        jPanelQuestionTable.setLayout(jPanelQuestionTableLayout);
        jPanelQuestionTableLayout.setHorizontalGroup(
            jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabelCAT1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPaneCAT1Title, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jLabelCAT1Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelCAT1Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCAT1Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCAT1Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCAT1Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabelCAT2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPaneCAT2Title, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jLabelCAT2Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelCAT2Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCAT2Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCAT2Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCAT2Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                        .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelCAT3, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(jScrollPaneCAT3Title, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelCAT4, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(jScrollPaneCAT4Title, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                        .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCAT3Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCAT3Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCAT3Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCAT3Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCAT3Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCAT4Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCAT4Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCAT4Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCAT4Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCAT4Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                        .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelCAT5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPaneCAT5Title, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabelCAT5Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCAT6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPaneCAT6Title, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                .addComponent(jLabelCAT6Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                        .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                .addComponent(jLabelCAT5Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT6Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                .addComponent(jLabelCAT5Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT6Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                .addComponent(jLabelCAT5Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT6Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                .addComponent(jLabelCAT5Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT6Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
        );
        jPanelQuestionTableLayout.setVerticalGroup(
            jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                        .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                .addComponent(jLabelCAT2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPaneCAT2Title))
                            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                .addComponent(jLabelCAT1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPaneCAT1Title)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                .addComponent(jLabelCAT1Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT1Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT1Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT1Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT1Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                .addComponent(jLabelCAT2Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT2Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT2Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT2Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCAT2Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                        .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPaneCAT4Title, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                    .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelCAT5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelCAT6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPaneCAT5Title, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPaneCAT6Title, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabelCAT4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                .addComponent(jLabelCAT3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPaneCAT3Title)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelQuestionTableLayout.createSequentialGroup()
                                .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelCAT5Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCAT6Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelCAT5Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCAT6Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelCAT5Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCAT6Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelCAT5Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCAT6Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelCAT5Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCAT6Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                    .addGap(44, 44, 44)
                                    .addComponent(jLabelCAT3Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelCAT3Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelCAT3Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelCAT3Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelQuestionTableLayout.createSequentialGroup()
                                    .addGroup(jPanelQuestionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelCAT4Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelCAT3Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelCAT4Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelCAT4Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelCAT4Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelCAT4Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(17, 17, 17))
        );

        jPanelGameboard.add(jPanelQuestionTable);
        jPanelQuestionTable.setBounds(430, 210, 840, 430);

        jButtonQuit.setText("Quit");
        jButtonQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitActionPerformed(evt);
            }
        });
        jPanelGameboard.add(jButtonQuit);
        jButtonQuit.setBounds(1060, 650, 53, 23);

        jButtonReturnToMainMenu.setText("Return to Main Menu");
        jButtonReturnToMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReturnToMainMenuActionPerformed(evt);
            }
        });
        jPanelGameboard.add(jButtonReturnToMainMenu);
        jButtonReturnToMainMenu.setBounds(900, 650, 160, 23);

        jPanelRoundInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Round Info"));

        jLabelCurrentPlayerTitle.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabelCurrentPlayerTitle.setText("Current Player:");

        jLabelCurrentPlayerName.setText("uninitialized");

        jLabelCurrentRoundNumber.setText("uninitialized");

        jLabelCurrentRoundTitle.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabelCurrentRoundTitle.setText("Current Round:");

        jLabelRemainingSpinsTitle.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabelRemainingSpinsTitle.setText("Remaining Spins:");

        jLabelRemaingSpinsNumber.setText("uninitialized");

        javax.swing.GroupLayout jPanelRoundInfoLayout = new javax.swing.GroupLayout(jPanelRoundInfo);
        jPanelRoundInfo.setLayout(jPanelRoundInfoLayout);
        jPanelRoundInfoLayout.setHorizontalGroup(
            jPanelRoundInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRoundInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRoundInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelRemainingSpinsTitle)
                    .addComponent(jLabelCurrentPlayerTitle)
                    .addComponent(jLabelCurrentRoundTitle))
                .addGap(18, 18, 18)
                .addGroup(jPanelRoundInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelCurrentPlayerName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelCurrentRoundNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jLabelRemaingSpinsNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanelRoundInfoLayout.setVerticalGroup(
            jPanelRoundInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRoundInfoLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanelRoundInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCurrentRoundTitle)
                    .addComponent(jLabelCurrentRoundNumber))
                .addGap(18, 18, 18)
                .addGroup(jPanelRoundInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCurrentPlayerTitle)
                    .addComponent(jLabelCurrentPlayerName))
                .addGap(18, 18, 18)
                .addGroup(jPanelRoundInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRemainingSpinsTitle)
                    .addComponent(jLabelRemaingSpinsNumber))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanelGameboard.add(jPanelRoundInfo);
        jPanelRoundInfo.setBounds(430, 10, 280, 190);

        jPanelTurnInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Current Turn Info"));

        jButtonShowAnswer.setText("Show Answer");
        jButtonShowAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowAnswerActionPerformed(evt);
            }
        });

        jLabelCurrentQuestionCategoryTitle.setText("Question Category:");

        jLabelCurrentQuestionValueTitle.setText("Question Value:");

        jLabelCurrentQuestionTitle.setText("Question:");

        jLabelQuestionTimerTitle.setText("Question Timer:");

        jLabelCurrentQuestionCategory.setText("uninitialized");

        jLabelCurrentQuestionValue.setText("uninitialized");

        jLabelQuestionTimer.setText("uninitialized");

        jTextAreaCurrentQuestion.setColumns(20);
        jTextAreaCurrentQuestion.setLineWrap(true);
        jTextAreaCurrentQuestion.setRows(5);
        jTextAreaCurrentQuestion.setText("uninitialized");
        jTextAreaCurrentQuestion.setEnabled(false);
        jScrollPane1.setViewportView(jTextAreaCurrentQuestion);

        javax.swing.GroupLayout jPanelTurnInfoLayout = new javax.swing.GroupLayout(jPanelTurnInfo);
        jPanelTurnInfo.setLayout(jPanelTurnInfoLayout);
        jPanelTurnInfoLayout.setHorizontalGroup(
            jPanelTurnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTurnInfoLayout.createSequentialGroup()
                .addGroup(jPanelTurnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTurnInfoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelTurnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCurrentQuestionCategoryTitle)
                            .addComponent(jLabelCurrentQuestionValueTitle)
                            .addComponent(jLabelCurrentQuestionTitle)
                            .addComponent(jLabelQuestionTimerTitle)))
                    .addComponent(jButtonShowAnswer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTurnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                    .addGroup(jPanelTurnInfoLayout.createSequentialGroup()
                        .addGroup(jPanelTurnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelQuestionTimer)
                            .addComponent(jLabelCurrentQuestionValue)
                            .addComponent(jLabelCurrentQuestionCategory))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelTurnInfoLayout.setVerticalGroup(
            jPanelTurnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTurnInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTurnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCurrentQuestionCategoryTitle)
                    .addComponent(jLabelCurrentQuestionCategory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTurnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCurrentQuestionValueTitle)
                    .addComponent(jLabelCurrentQuestionValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelTurnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelQuestionTimerTitle)
                    .addComponent(jLabelQuestionTimer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTurnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTurnInfoLayout.createSequentialGroup()
                        .addComponent(jLabelCurrentQuestionTitle)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonShowAnswer)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTurnInfoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jPanelGameboard.add(jPanelTurnInfo);
        jPanelTurnInfo.setBounds(720, 10, 410, 190);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelGameboard, javax.swing.GroupLayout.PREFERRED_SIZE, 1282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelGameboard, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButtonQuitActionPerformed

    private void jButtonReturnToMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReturnToMainMenuActionPerformed
        // TODO add your handling code here:
        this.model.user_input = USER_INPUT_ENUM.MAIN_MENU;
        this.view_flag = VIEW_ENUM.MAIN_MENU;
        
    }//GEN-LAST:event_jButtonReturnToMainMenuActionPerformed

    private void jButtonShowAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowAnswerActionPerformed
        // TODO add your handling code here:
        //Controller.a.setVisible(true);
        this.model.user_input = USER_INPUT_ENUM.CONTINUE;
        this.view_flag = VIEW_ENUM.ANSWER;
    }//GEN-LAST:event_jButtonShowAnswerActionPerformed

    private void jButtonSpinWheelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSpinWheelActionPerformed
        // TODO add your handling code here:
        this.model.user_input = USER_INPUT_ENUM.SPIN_WHEEL;
//        this.spinner1.rotateImage(0);
    }//GEN-LAST:event_jButtonSpinWheelActionPerformed

    private void jLabelCAT1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCAT1MouseReleased
        // TODO add your handling code here:
        switch(this.model.game.getState()){
            case PLAYERS_CHOICE:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT1MouseReleased>>WHILE IN PLAYERS_CHOICE");
                this.model.user_input = USER_INPUT_ENUM.CATEGORY1;
                break;
            default:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT1MouseReleased>>CASE ERROR NOT VALID STATE"); 
                break;
        }
    }//GEN-LAST:event_jLabelCAT1MouseReleased

    private void jLabelCAT2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCAT2MouseReleased
        // TODO add your handling code here:
        switch(this.model.game.getState()){
            case PLAYERS_CHOICE:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT2MouseReleased>>WHILE IN PLAYERS_CHOICE");
                this.model.user_input = USER_INPUT_ENUM.CATEGORY2;
                break;
            default:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT2MouseReleased>>CASE ERROR NOT VALID STATE"); 
                break;
        }
    }//GEN-LAST:event_jLabelCAT2MouseReleased

    private void jLabelCAT3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCAT3MouseReleased
        // TODO add your handling code here:
        switch(this.model.game.getState()){
            case PLAYERS_CHOICE:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT3MouseReleased>>WHILE IN PLAYERS_CHOICE");
                this.model.user_input = USER_INPUT_ENUM.CATEGORY3;
                break;
            default:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT3MouseReleased>>CASE ERROR NOT VALID STATE"); 
                break;
        }
    }//GEN-LAST:event_jLabelCAT3MouseReleased

    private void jLabelCAT4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCAT4MouseReleased
        // TODO add your handling code here:
        switch(this.model.game.getState()){
            case PLAYERS_CHOICE:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT4MouseReleased>>WHILE IN PLAYERS_CHOICE");
                this.model.user_input = USER_INPUT_ENUM.CATEGORY4;
                break;
            default:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT4MouseReleased>>CASE ERROR NOT VALID STATE"); 
                break;
        }
    }//GEN-LAST:event_jLabelCAT4MouseReleased

    private void jLabelCAT5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCAT5MouseReleased
        // TODO add your handling code here:
        switch(this.model.game.getState()){
            case PLAYERS_CHOICE:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT5MouseReleased>>WHILE IN PLAYERS_CHOICE");
                this.model.user_input = USER_INPUT_ENUM.CATEGORY5;
                break;
            default:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT5MouseReleased>>CASE ERROR NOT VALID STATE"); 
                break;
        }
    }//GEN-LAST:event_jLabelCAT5MouseReleased

    private void jLabelCAT6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCAT6MouseReleased
        // TODO add your handling code here:
        switch(this.model.game.getState()){
            case PLAYERS_CHOICE:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT6MouseReleased>>WHILE IN PLAYERS_CHOICE");
                this.model.user_input = USER_INPUT_ENUM.CATEGORY6;
                break;
            default:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>EVENT>>jLabelCAT6MouseReleased>>CASE ERROR NOT VALID STATE");
                break;
        }
    }//GEN-LAST:event_jLabelCAT6MouseReleased

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ViewGameboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ViewGameboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ViewGameboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ViewGameboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                Model model = new Model();
//                new ViewGameboard(model).setVisible(true);
//            }
//        });
//    }
    
   public void update_view(){
       System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()");
       if(this.model.game.isComplete){
            if(this.model.game.players.get(0).totalScore > this.model.game.players.get(1).totalScore && this.model.game.players.get(0).totalScore > this.model.game.players.get(2).totalScore){
                JOptionPane.showMessageDialog(null, "Game Over! Player 1 wins!");
                this.view_flag = VIEW_ENUM.MAIN_MENU;
            }
            else if(this.model.game.players.get(1).totalScore > this.model.game.players.get(0).totalScore && this.model.game.players.get(1).totalScore > this.model.game.players.get(2).totalScore){
                JOptionPane.showMessageDialog(null, "Game Over! Player 2 wins!");
                this.view_flag = VIEW_ENUM.MAIN_MENU;

            }
            else{
                JOptionPane.showMessageDialog(null, "Game Over! Player 3 wins!");
                this.view_flag = VIEW_ENUM.MAIN_MENU;

            }
            this.model.game.isComplete = false;
            
       }
       switch(this.model.game.getState()){
            case WHEEL:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>WHEEL");
                //JOptionPane.showMessageDialog(null, "DEBUG: State is WHEEL");
                
                //UPDATE SCORE BOARD
                update_view_scoreboard();
                //UPDATE ROUND INFO
                update_view_roundinfo();
                //UPDATE CURRENT TURN INFO
                this.jPanelTurnInfo.setVisible(false); //no current question in wheel state
                //UPDATE WHEEL
                update_view_wheel();
                //UPDATE QUESTION TABLE
                update_view_questiontable();
                
                if (model.wheel_selection_change_ack == MODEL_VIEW_ENUM.UNACKNOWLEDGED && (this.model.game.sector == "Free Turn" || this.model.game.sector == "Double Score")){
                    JOptionPane.showMessageDialog(null, "You got a " + this.model.game.sector + ".\n" + this.model.game.getCurrentPlayer().name + " please spin the wheel by pressing the spin wheel button.");
                    model.wheel_selection_change_ack = MODEL_VIEW_ENUM.ACKNOWLEDGED;
                }
                else if(model.wheel_selection_change_ack == MODEL_VIEW_ENUM.UNACKNOWLEDGED && (this.model.game.sector == "Lose Turn")){
                    //need to show play token button in current turn panel
                    this.jPanelTurnInfo.setVisible(true);
                    this.jLabelCurrentQuestionCategory.setText("");
                    this.jLabelCurrentQuestionValue.setText("");
                    this.jLabelQuestionTimer.setText("");
                    this.jTextAreaCurrentQuestion.setText("");
                    //should probably hide show answer button
                    this.jButtonShowAnswer.setVisible(false);
                    if (this.model.game.sector != "Lose Turn"){
                        JOptionPane.showMessageDialog(null, "You got a " + this.model.game.sector + ".\nYou may use a token if you have one. Otherwise, moving to " + this.model.game.getCurrentPlayer().name + " turn.<<DEBUG NOTE: THIS PLAYER IS ALREADY CURRENT PLAYER>>\nPlease spin the wheel by pressing the spin wheel button.");

                    }
//                    if (this.model.game.getCurrentPlayer().freeTurns == 0){
//                        model.wheel_selection_change_ack = MODEL_VIEW_ENUM.ACKNOWLEDGED;
//                    }
                    model.wheel_selection_change_ack = MODEL_VIEW_ENUM.ACKNOWLEDGED;
                }
                else if(model.wheel_selection_change_ack == MODEL_VIEW_ENUM.UNACKNOWLEDGED && (this.model.game.sector == "Bankrupt")){
                    JOptionPane.showMessageDialog(null, "You got a " + this.model.game.sector + ".\nMoving to next player's turn.\n" + this.model.game.getCurrentPlayer().name + " please spin the wheel by pressing the spin wheel button.");
                    model.wheel_selection_change_ack = MODEL_VIEW_ENUM.ACKNOWLEDGED;
                }
                else if(model.wheel_selection_change_ack == MODEL_VIEW_ENUM.UNACKNOWLEDGED){
                    JOptionPane.showMessageDialog(null, this.model.game.getCurrentPlayer().name + " please spin the wheel by pressing the spin wheel button.");
                    model.wheel_selection_change_ack = MODEL_VIEW_ENUM.ACKNOWLEDGED;
                }
                
                break;
            case PLAYERS_CHOICE:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>PLAYERS_CHOICE");
                //JOptionPane.showMessageDialog(null, "DEBUG: State is PLAYERS_CHOICE");
                if (model.wheel_selection_change_ack == MODEL_VIEW_ENUM.UNACKNOWLEDGED){
                    JOptionPane.showMessageDialog(null, this.model.game.getCurrentPlayer().name + " please select a category by clicking on the question table category header highlighted in yellow.");
                    model.wheel_selection_change_ack = MODEL_VIEW_ENUM.ACKNOWLEDGED;
                }
                
                //UPDATE SCORE BOARD
                update_view_scoreboard();
                //UPDATE ROUND INFO
                update_view_roundinfo();
                //UPDATE CURRENT TURN INFO
                this.jPanelTurnInfo.setVisible(false); //no current question yet in player's choice state
                //UPDATE WHEEL
                update_view_wheel();
                //UPDATE QUESTION TABLE
                update_view_questiontable_category_colors(Color.yellow);
                
                break;   
            case QUESTION_BOARD: 
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>QUESTION_BOARD");
                //JOptionPane.showMessageDialog(null, "DEBUG: State is Question_Board");

                //UPDATE SCORE BOARD
                update_view_scoreboard();
                //UPDATE ROUND INFO
                update_view_roundinfo();
                //UPDATE CURRENT TURN INFO
                this.jPanelTurnInfo.setVisible(false); //current question is not yet revealed in question board state
                //UPDATE WHEEL
                update_view_wheel();
                //UPDATE QUESTION TABLE
                update_view_questiontable();
                update_view_questiontable_category_colors(colorJeopardyBlue);
                
                JOptionPane.showMessageDialog(null, this.model.game.getCurrentPlayer().name + " be prepared to answer a question regarding " + this.model.game.getCurrentRound().getCurrentCategory().name +".");
                this.model.user_input = USER_INPUT_ENUM.CONTINUE;
                
                
                break;
            case QUESTION:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>QUESTION");
                
                //UPDATE SCORE BOARD
                update_view_scoreboard();
                //UPDATE ROUND INFO
                update_view_roundinfo();
                //UPDATE CURRENT TURN INFO
                this.jPanelTurnInfo.setVisible(true);
                this.jButtonShowAnswer.setVisible(true);
                update_view_currentturninfo();
                //UPDATE WHEEL
                update_view_wheel();
                //UPDATE QUESTION TABLE
                update_view_questiontable();
                
                break;
            case ANSWER:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>ANSWER");
                //JOptionPane.showMessageDialog(null, "DEBUG: State is ANSWER");
                
                //the button action should make answer GUI visable - not sure what other logic here since that panel should handle the change to state
                
                break;
            case USE_TOKEN:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>USE_TOKEN");
                if (this.model.wheel_selection_change_ack == MODEL_VIEW_ENUM.UNACKNOWLEDGED){
                    this.view_flag = VIEW_ENUM.TOKEN;
                    this.model.wheel_selection_change_ack = MODEL_VIEW_ENUM.ACKNOWLEDGED;
                }
                
                
                //JOptionPane.showMessageDialog(null, "DEBUG: State is USE_TOKEN");
                
                //not sure if anything needs to happen here
                
                break;
            default:
                System.out.println("VIEWGAMEBOARD>>UPDATE_VIEW()>>CASE ERROR");
                
                
       
       }
   }
   
   public void update_view_questiontable_category_colors(Color newColorToSet){
        this.jLabelCAT1.setBackground(newColorToSet);
        this.jLabelCAT2.setBackground(newColorToSet);
        this.jLabelCAT3.setBackground(newColorToSet);
        this.jLabelCAT4.setBackground(newColorToSet);
        this.jLabelCAT5.setBackground(newColorToSet);
        this.jLabelCAT6.setBackground(newColorToSet);
   }
   
   public void update_view_scoreboard(){
       this.jLabelTeam1Tokens.setText(Integer.toString(this.model.game.players.get(0).freeTurns));
        this.jLabelTeam2Tokens.setText(Integer.toString(this.model.game.players.get(1).freeTurns));
        this.jLabelTeam3Tokens.setText(Integer.toString(this.model.game.players.get(2).freeTurns));
        this.jLabelTeam1RoundScore.setText(Integer.toString(this.model.game.players.get(0).roundScore));
        this.jLabelTeam2RoundScore.setText(Integer.toString(this.model.game.players.get(1).roundScore));
        this.jLabelTeam3RoundScore.setText(Integer.toString(this.model.game.players.get(2).roundScore));
        this.jLabelTeam1TotalScore.setText(Integer.toString(this.model.game.players.get(0).totalScore));
        this.jLabelTeam2TotalScore.setText(Integer.toString(this.model.game.players.get(1).totalScore));
        this.jLabelTeam3TotalScore.setText(Integer.toString(this.model.game.players.get(2).totalScore));
   }
   
   public void update_view_roundinfo(){
       if (this.model.game.rounds.get(0).isCurrent == true){
            this.jLabelCurrentRoundNumber.setText("1");
        }
        else if (this.model.game.rounds.get(1).isCurrent == true) {
            this.jLabelCurrentRoundNumber.setText("2");
        } else {
            this.jLabelCurrentRoundNumber.setText("N/A");
        }
        this.jLabelCurrentPlayerName.setText(this.model.game.getCurrentPlayer().name);
        this.jLabelRemaingSpinsNumber.setText(Integer.toString(this.model.game.getCurrentRound().spinsRemaining));
   }
   
   public void update_view_currentturninfo(){
        Round curr_round;
        curr_round = this.model.game.getCurrentRound();
        this.jLabelCurrentQuestionCategory.setText(curr_round.getCurrentCategory().name);
        this.jLabelCurrentQuestionValue.setText(Integer.toString(curr_round.getCurrentCategory().getCurrentQuestion().value));
        this.jLabelQuestionTimer.setText(Long.toString(this.model.game.time_remaining/1000));
        this.jTextAreaCurrentQuestion.setText(curr_round.getCurrentCategory().getCurrentQuestion().questionString);
   }
//   public void spinSpinner(int landOn){
//       for (int i = 0;i<landOn;i++){
//           this.spinner1.rotateImage(i);
//           
//       }
//   }
   public void update_view_wheel(){
       this.jLabelWheelPosition.setText(this.model.game.sector);
//       this.spinner1.rotateImage(30);
        Round curr_round;
        curr_round = this.model.game.getCurrentRound();
        switch(this.model.game.sector){
            case "Bankrupt":
                this.spinner1.rotateImage(210);
                //spinSpinner(210);
                break;
            case "Free Turn":
                this.spinner1.rotateImage(270);
                //spinSpinner(270);
                break;
            case "Double Score":
                this.spinner1.rotateImage(30);
                //spinSpinner(30);
                break;
            case "Lose Turn":
                this.spinner1.rotateImage(90);
                //spinSpinner(90);
                break;
            case "Player's Choice":
                this.spinner1.rotateImage(150);
                //spinSpinner(150);
                break;// Player's choice and Opponent's Choice are essentially the same as far as the model is concerned            
            case "Opponent's Choice":
                this.spinner1.rotateImage(330);
                //spinSpinner(330);
                break;
            
                // Moves to the default after getting the category
            default:
                if (curr_round.categories.get(0).name.equals(this.model.game.sector)){
                    this.spinner1.rotateImage(0);
                    //spinSpinner(0);
                }
                else if (curr_round.categories.get(1).name.equals(this.model.game.sector)){
                    this.spinner1.rotateImage(60);
                    //spinSpinner(60);
                }
                else if (curr_round.categories.get(2).name.equals(this.model.game.sector)){
                    this.spinner1.rotateImage(120);   
                    //spinSpinner(120);
                }
                else if (curr_round.categories.get(3).name.equals(this.model.game.sector)){
                    this.spinner1.rotateImage(180);   
                    //spinSpinner(180);
                }
                else if (curr_round.categories.get(4).name.equals(this.model.game.sector)){
                    this.spinner1.rotateImage(240);   
                    //spinSpinner(240);
                }
                else if (curr_round.categories.get(5).name.equals(this.model.game.sector)){
                    this.spinner1.rotateImage(300);   
                    //spinSpinner(300);
                }
                break;
        }
    }
   
   
   public void update_view_questiontable(){       
       Round curr_round;
       curr_round = this.model.game.getCurrentRound();
       String q1value;
       String q2value;
       String q3value;
       String q4value;
       String q5value;
       
       System.out.println("kajs;dlfjas;ldfjal;sdkf " + this.model.game.round);
       if (this.model.game.round == 1){
           q1value = "200";
           q2value = "400";
           q3value = "600";
           q4value = "800";
           q5value = "1000";
       }
       else {
           q1value = "400";
           q2value = "800";
           q3value = "1200";
           q4value = "1600";
           q5value = "2000";
       }
       if (curr_round.categories.get(0).isComplete) {
            this.jLabelCAT1.setText("");
        } else {
            this.jLabelCAT1.setText("Category 1");
        }
        jTextAreaCAT1Title.setText(curr_round.categories.get(0).name);
        
        if (curr_round.categories.get(0).questions.get(0).isComplete){
            this.jLabelCAT1Q1.setText("");
        } else {
            this.jLabelCAT1Q1.setText(q1value);
        }
        if (curr_round.categories.get(0).questions.get(1).isComplete){
            this.jLabelCAT1Q2.setText("");
        } else {
            this.jLabelCAT1Q2.setText(q2value);
        }
        if (curr_round.categories.get(0).questions.get(2).isComplete){
            this.jLabelCAT1Q3.setText("");
        } else {
            this.jLabelCAT1Q3.setText(q3value);
        }
        if (curr_round.categories.get(0).questions.get(3).isComplete){
            this.jLabelCAT1Q4.setText("");
        } else {
            this.jLabelCAT1Q4.setText(q4value);
        }
        if (curr_round.categories.get(0).questions.get(4).isComplete){
            this.jLabelCAT1Q5.setText("");
        } else {
            this.jLabelCAT1Q5.setText(q5value);
        }
        
        if (curr_round.categories.get(1).isComplete) {
            this.jLabelCAT2.setText("");
        } else {
            this.jLabelCAT2.setText("Category 2");
        }
        jTextAreaCAT2Title.setText(curr_round.categories.get(1).name);
        
        if (curr_round.categories.get(1).questions.get(0).isComplete){
            this.jLabelCAT2Q1.setText("");
        } else {
            this.jLabelCAT2Q1.setText(q1value);
        }
        if (curr_round.categories.get(1).questions.get(1).isComplete){
            this.jLabelCAT2Q2.setText("");
        } else {
            this.jLabelCAT2Q2.setText(q2value);
        }
        if (curr_round.categories.get(1).questions.get(2).isComplete){
            this.jLabelCAT2Q3.setText("");
        } else {
            this.jLabelCAT2Q3.setText(q3value);
        }
        if (curr_round.categories.get(1).questions.get(3).isComplete){
            this.jLabelCAT2Q4.setText("");
        } else {
            this.jLabelCAT2Q4.setText(q4value);
        }
        if (curr_round.categories.get(1).questions.get(4).isComplete){
            this.jLabelCAT2Q5.setText("");
        } else {
            this.jLabelCAT2Q5.setText(q5value);
        }
        jTextAreaCAT3Title.setText(curr_round.categories.get(2).name);
        if (curr_round.categories.get(2).isComplete) {
            this.jLabelCAT3.setText("");
        } else {
            this.jLabelCAT3.setText("Category 3");
        }
        jTextAreaCAT3Title.setText(curr_round.categories.get(2).name);
        if (curr_round.categories.get(2).questions.get(0).isComplete){
            this.jLabelCAT3Q1.setText("");
        } else {
            this.jLabelCAT3Q1.setText(q1value);
        }
        if (curr_round.categories.get(2).questions.get(1).isComplete){
            this.jLabelCAT3Q2.setText("");
        } else {
            this.jLabelCAT3Q2.setText(q2value);
        }
        if (curr_round.categories.get(2).questions.get(2).isComplete){
            this.jLabelCAT3Q3.setText("");
        } else {
            this.jLabelCAT3Q3.setText(q3value);
        }
        if (curr_round.categories.get(2).questions.get(3).isComplete){
            this.jLabelCAT3Q4.setText("");
        } else {
            this.jLabelCAT3Q4.setText(q4value);
        }
        if (curr_round.categories.get(2).questions.get(4).isComplete){
            this.jLabelCAT3Q5.setText("");
        } else {
            this.jLabelCAT3Q5.setText(q5value);
        }
        jTextAreaCAT4Title.setText(curr_round.categories.get(3).name);
        if (curr_round.categories.get(3).isComplete) {
            this.jLabelCAT4.setText("");
        } else {
            this.jLabelCAT4.setText("Category 4");
        }
        jTextAreaCAT4Title.setText(curr_round.categories.get(3).name);
        if (curr_round.categories.get(3).questions.get(0).isComplete){
            this.jLabelCAT4Q1.setText("");
        } else {
            this.jLabelCAT4Q1.setText(q1value);
        }
        if (curr_round.categories.get(3).questions.get(1).isComplete){
            this.jLabelCAT4Q2.setText("");
        } else {
            this.jLabelCAT4Q2.setText(q2value);
        }
        if (curr_round.categories.get(3).questions.get(2).isComplete){
            this.jLabelCAT4Q3.setText("");
        } else {
            this.jLabelCAT4Q3.setText(q3value);
        }
        if (curr_round.categories.get(3).questions.get(3).isComplete){
            this.jLabelCAT4Q4.setText("");
        } else {
            this.jLabelCAT4Q4.setText(q4value);
        }
        if (curr_round.categories.get(3).questions.get(4).isComplete){
            this.jLabelCAT4Q5.setText("");
        } else {
            this.jLabelCAT4Q5.setText(q5value);
        }
        jTextAreaCAT5Title.setText(curr_round.categories.get(4).name);
        if (curr_round.categories.get(4).isComplete) {
            this.jLabelCAT5.setText("");
        } else {
            this.jLabelCAT5.setText("Category 5");
        }
        jTextAreaCAT5Title.setText(curr_round.categories.get(4).name);
        if (curr_round.categories.get(4).questions.get(0).isComplete){
            this.jLabelCAT5Q1.setText("");
        } else {
            this.jLabelCAT5Q1.setText(q1value);
        }
        if (curr_round.categories.get(4).questions.get(1).isComplete){
            this.jLabelCAT5Q2.setText("");
        } else {
            this.jLabelCAT5Q2.setText(q2value);
        }
        if (curr_round.categories.get(4).questions.get(2).isComplete){
            this.jLabelCAT5Q3.setText("");
        } else {
            this.jLabelCAT5Q3.setText(q3value);
        }
        if (curr_round.categories.get(4).questions.get(3).isComplete){
            this.jLabelCAT5Q4.setText("");
        } else {
            this.jLabelCAT5Q4.setText(q4value);
        }
        if (curr_round.categories.get(4).questions.get(4).isComplete){
            this.jLabelCAT5Q5.setText("");
        } else {
            this.jLabelCAT5Q5.setText(q5value);
        }
        jTextAreaCAT6Title.setText(curr_round.categories.get(5).name);
        if (curr_round.categories.get(5).isComplete) {
            this.jLabelCAT6.setText("");
        } else {
            this.jLabelCAT6.setText("Category 6");
        }
        jTextAreaCAT6Title.setText(curr_round.categories.get(5).name);
        if (curr_round.categories.get(5).questions.get(0).isComplete){
            this.jLabelCAT6Q1.setText("");
        } else {
            this.jLabelCAT6Q1.setText(q1value);
        }
        if (curr_round.categories.get(5).questions.get(1).isComplete){
            this.jLabelCAT6Q2.setText("");
        } else {
            this.jLabelCAT6Q2.setText(q2value);
        }
        if (curr_round.categories.get(5).questions.get(2).isComplete){
            this.jLabelCAT6Q3.setText("");
        } else {
            this.jLabelCAT6Q3.setText(q3value);
        }
        if (curr_round.categories.get(5).questions.get(3).isComplete){
            this.jLabelCAT6Q4.setText("");
        } else {
            this.jLabelCAT6Q4.setText(q4value);
        }
        if (curr_round.categories.get(5).questions.get(4).isComplete){
            this.jLabelCAT6Q5.setText("");
        } else {
            this.jLabelCAT6Q5.setText(q5value);
        }
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonQuit;
    private javax.swing.JButton jButtonReturnToMainMenu;
    private javax.swing.JButton jButtonShowAnswer;
    private javax.swing.JButton jButtonSpinWheel;
    private javax.swing.JLabel jLabelCAT1;
    private javax.swing.JLabel jLabelCAT1Q1;
    private javax.swing.JLabel jLabelCAT1Q2;
    private javax.swing.JLabel jLabelCAT1Q3;
    private javax.swing.JLabel jLabelCAT1Q4;
    private javax.swing.JLabel jLabelCAT1Q5;
    private javax.swing.JLabel jLabelCAT2;
    private javax.swing.JLabel jLabelCAT2Q1;
    private javax.swing.JLabel jLabelCAT2Q2;
    private javax.swing.JLabel jLabelCAT2Q3;
    private javax.swing.JLabel jLabelCAT2Q4;
    private javax.swing.JLabel jLabelCAT2Q5;
    private javax.swing.JLabel jLabelCAT3;
    private javax.swing.JLabel jLabelCAT3Q1;
    private javax.swing.JLabel jLabelCAT3Q2;
    private javax.swing.JLabel jLabelCAT3Q3;
    private javax.swing.JLabel jLabelCAT3Q4;
    private javax.swing.JLabel jLabelCAT3Q5;
    private javax.swing.JLabel jLabelCAT4;
    private javax.swing.JLabel jLabelCAT4Q1;
    private javax.swing.JLabel jLabelCAT4Q2;
    private javax.swing.JLabel jLabelCAT4Q3;
    private javax.swing.JLabel jLabelCAT4Q4;
    private javax.swing.JLabel jLabelCAT4Q5;
    private javax.swing.JLabel jLabelCAT5;
    private javax.swing.JLabel jLabelCAT5Q1;
    private javax.swing.JLabel jLabelCAT5Q2;
    private javax.swing.JLabel jLabelCAT5Q3;
    private javax.swing.JLabel jLabelCAT5Q4;
    private javax.swing.JLabel jLabelCAT5Q5;
    private javax.swing.JLabel jLabelCAT6;
    private javax.swing.JLabel jLabelCAT6Q1;
    private javax.swing.JLabel jLabelCAT6Q2;
    private javax.swing.JLabel jLabelCAT6Q3;
    private javax.swing.JLabel jLabelCAT6Q4;
    private javax.swing.JLabel jLabelCAT6Q5;
    private javax.swing.JLabel jLabelCurrentPlayerName;
    private javax.swing.JLabel jLabelCurrentPlayerTitle;
    private javax.swing.JLabel jLabelCurrentQuestionCategory;
    private javax.swing.JLabel jLabelCurrentQuestionCategoryTitle;
    private javax.swing.JLabel jLabelCurrentQuestionTitle;
    private javax.swing.JLabel jLabelCurrentQuestionValue;
    private javax.swing.JLabel jLabelCurrentQuestionValueTitle;
    private javax.swing.JLabel jLabelCurrentRoundNumber;
    private javax.swing.JLabel jLabelCurrentRoundTitle;
    private javax.swing.JLabel jLabelQuestionTimer;
    private javax.swing.JLabel jLabelQuestionTimerTitle;
    private javax.swing.JLabel jLabelRemaingSpinsNumber;
    private javax.swing.JLabel jLabelRemainingSpinsTitle;
    private javax.swing.JLabel jLabelRoundScoreTitle;
    private javax.swing.JLabel jLabelSpinner;
    private javax.swing.JLabel jLabelTeam1Name;
    private javax.swing.JLabel jLabelTeam1RoundScore;
    private javax.swing.JLabel jLabelTeam1Tokens;
    private javax.swing.JLabel jLabelTeam1TotalScore;
    private javax.swing.JLabel jLabelTeam2Name;
    private javax.swing.JLabel jLabelTeam2RoundScore;
    private javax.swing.JLabel jLabelTeam2Tokens;
    private javax.swing.JLabel jLabelTeam2TotalScore;
    private javax.swing.JLabel jLabelTeam3Name;
    private javax.swing.JLabel jLabelTeam3RoundScore;
    private javax.swing.JLabel jLabelTeam3Tokens;
    private javax.swing.JLabel jLabelTeam3TotalScore;
    private javax.swing.JLabel jLabelTokensTitle;
    private javax.swing.JLabel jLabelTotalScoreTitle;
    private javax.swing.JLabel jLabelWheel;
    private javax.swing.JLabel jLabelWheelPosition;
    private javax.swing.JPanel jPanelGameboard;
    private javax.swing.JPanel jPanelQuestionTable;
    private javax.swing.JPanel jPanelRoundInfo;
    private javax.swing.JPanel jPanelScoreBoard;
    private javax.swing.JPanel jPanelTurnInfo;
    private javax.swing.JPanel jPanelWheel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneCAT1Title;
    private javax.swing.JScrollPane jScrollPaneCAT2Title;
    private javax.swing.JScrollPane jScrollPaneCAT3Title;
    private javax.swing.JScrollPane jScrollPaneCAT4Title;
    private javax.swing.JScrollPane jScrollPaneCAT5Title;
    private javax.swing.JScrollPane jScrollPaneCAT6Title;
    private javax.swing.JTextArea jTextAreaCAT1Title;
    private javax.swing.JTextArea jTextAreaCAT2Title;
    private javax.swing.JTextArea jTextAreaCAT3Title;
    private javax.swing.JTextArea jTextAreaCAT4Title;
    private javax.swing.JTextArea jTextAreaCAT5Title;
    private javax.swing.JTextArea jTextAreaCAT6Title;
    private javax.swing.JTextArea jTextAreaCurrentQuestion;
    private Resources.Spinner spinner1;
    // End of variables declaration//GEN-END:variables
}
